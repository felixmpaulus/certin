import React from 'react'
import { MessageSquare, Clock, BellRing, LucideIcon, FileBarChart, Banknote } from 'lucide-react'
import { AnimatedList } from '@/components/magicui/animated-list'
import { CardTitle } from '@/components/ui/card'

// Define available tones and their corresponding colors
const colorMap = {
  neutral: { background: '#dbeafe', color: '#2563eb' },
  warning: { background: '#fef3c7', color: '#d97706' },
  urgent: { background: '#fee2e2', color: '#dc2626' },
  success: { background: '#dcfce7', color: '#16a34a' },
}

type MessageTone = keyof typeof colorMap

type Message = {
  id: string
  title: string
  additionalInfo?: {
    text: string
    link?: string
  }[]
  tone: MessageTone
  icon: LucideIcon
}

const messages: Message[] = [
  // {
  //   id: "1",
  //   title: "Driver Francis called in sick for today and tomorrow",
  //   additionalInfo: [
  //     { text: "5m ago via WhatsApp" },
  //     { text: "Dismiss", link: "#" },
  //     { text: "View impact on schedule", link: "#" }
  //   ],
  //   tone: "urgent",
  //   icon: MessageSquare
  // },
  {
    id: '2',
    title: 'Car #8578 has maintenance scheduled tomorrow',
    additionalInfo: [
      { text: 'Dismiss', link: '#' },
      { text: 'Details', link: '#' },
      { text: 'Remind me again by 10AM', link: '#' },
    ],
    tone: 'neutral',
    icon: Clock,
  },
  {
    id: '3',
    title: 'Invoicing for contractor ChronoPost is coming up',
    additionalInfo: [
      { text: 'Est.: 46430 €' },
      { text: 'Dismiss', link: '#' },
      { text: 'View autogenerated invoice', link: '#' },
    ],
    tone: 'neutral',
    icon: BellRing,
  },
  // {
  //   id: "4",
  //   title: "You received an invoice from Marc via Email",
  //   additionalInfo: [
  //     { text: "Amount: 650,92 €" },
  //     { text: "Dismiss", link: "#" },
  //     { text: "View", link: "#" },
  //     { text: "Pay now", link: "#" }
  //   ],
  //   tone: "neutral",
  //   icon: MessageSquare
  // },
  // {
  //   id: "5",
  //   title: "Fuel prices dropped 5% at partner stations",
  //   additionalInfo: [{ text: "Potential monthly savings: 1240 €" }, { text: "Dismiss", link: "#" }],
  //   tone: "warning",
  //   icon: BellRing
  // },
  // {
  //   id: "6",
  //   title: "Client GreenGrocers requested delivery time change",
  //   additionalInfo: [
  //     { text: "10m ago" },
  //     { text: "Request: 14:00-16:00" },
  //     { text: "Dismiss", link: "#" },
  //     { text: "Approve", link: "#" },
  //     { text: "View", link: "#" }
  //   ],
  //   tone: "warning",
  //   icon: MessageSquare
  // },
  // {
  //   id: "7",
  //   title: "Driver Mathew completed deliveries ahead of schedule",
  //   additionalInfo: [
  //     { text: "He is available for 2 additional pickups" },
  //     { text: "Dismiss", link: "#" },
  //     { text: "Assign", link: "#" }
  //   ],
  //   tone: "success",
  //   icon: CheckCircle2
  // },
  {
    id: '8',
    title: 'Client TechPro requests delivery confirmation via email',
    additionalInfo: [
      { text: '30m ago' },
      { text: 'Dismiss', link: '#' },
      { text: 'Send proof of delivery', link: '#' },
      { text: 'View', link: '#' },
    ],
    tone: 'warning',
    icon: MessageSquare,
  },
  {
    id: '9',
    title: 'Q1 financial report ready',
    additionalInfo: [
      { text: 'Revenue up 12% vs. Q4' },
      { text: 'Dismiss', link: '#' },
      { text: 'View report', link: '#' },
    ],
    tone: 'success',
    icon: FileBarChart,
  },
  {
    id: '10',
    title: 'Payment received from GlobalShip Inc.',
    additionalInfo: [
      { text: 'Just now' },
      { text: 'Amount: 12450€' },
      { text: 'Dismiss', link: '#' },
      { text: 'View', link: '#' },
    ],
    tone: 'success',
    icon: Banknote,
  },
  // {
  //   id: "11",
  //   title: "Weather alert: Heavy rain expected",
  //   additionalInfo: [
  //     { text: "Could affect 31 deliveries" },
  //     { text: "Dismiss", link: "#" },
  //     { text: "View", link: "#" }
  //   ],
  //   tone: "urgent",
  //   icon: BellRing
  // }
]

export const MessageManagerDemo: React.FC<{ id: string }> = () => {
  return (
    <div className='h-[680px]'>
      {/* <h2 className="text-lg font-semibold mb-4">Needs attention</h2> */}
      <CardTitle className='mb-4'>What needs your attention:</CardTitle>
      <AnimatedList
        delay={1500}
        className='flex flex-col gap-4 max-h-full overflow-auto'
        style={
          {
            scrollbarWidth: 'none',
            msOverflowStyle: 'none',
            WebkitOverflowScrolling: 'touch',
            overflow: 'auto',
            overflowY: 'auto',
            overflowX: 'hidden',
            '::-webkit-scrollbar': { display: 'none' },
          } as React.CSSProperties
        }
      >
        {messages.reverse().map((message) => (
          <div key={message.id}>
            <div className='flex items-start gap-4 p-4 bg-muted rounded-lg border border-border'>
              <div
                className='rounded-sm flex items-center justify-center'
                style={{ backgroundColor: colorMap[message.tone].background }}
              >
                <message.icon
                  className='h-5 w-5 m-1'
                  style={{ color: colorMap[message.tone].color }}
                />
              </div>
              <div>
                <div className='font-medium'>{message.title}</div>
                <div className='text-sm text-gray-500 flex flex-wrap'>
                  {message.additionalInfo?.map((item, i) => (
                    <React.Fragment key={i}>
                      {i > 0 && <span className='mx-1.5'>•</span>}
                      {item.link ? (
                        <span
                          className={`whitespace-nowrap underline cursor-pointer ${
                            item.text === 'Dismiss' ? '' : 'text-blue-600'
                          }`}
                        >
                          {item.text}
                        </span>
                      ) : (
                        <span className='whitespace-nowrap'>{item.text}</span>
                      )}
                    </React.Fragment>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </AnimatedList>
    </div>
  )
}
